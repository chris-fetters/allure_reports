{"uid":"c0ddffcf475c9d5a","name":"Feature 1 Test 1 for fruit corn","fullName":"tests.test_sample.TestVegetables#test_veggies","historyId":"f94026e5220a29ad48996a047ed1bade","time":{"start":1719350400496,"stop":1719350400496,"duration":0},"description":"This test will validate that the first charater of the test vegtable matches a random vegtable","descriptionHtml":"<p>This test will validate that the first charater of the test vegtable matches a random vegtable</p>\n","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: peppers vs. Test Fruit corn\nassert 'p' == 'c'\n  \n  - c\n  + p","statusTrace":"self = <tests.test_sample.TestVegetables object at 0x7f8288de5490>\nvegetable = 'corn'\n\n    @allure.description(\"This test will validate that the first charater of the test vegtable matches a random vegtable\")\n    @pytest.mark.parametrize(\"vegetable\",[\"beans\",\"corn\",\"peas\",\"cauliflower\",\"carrots\"])\n    def test_veggies(self,vegetable)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {vegetable}\")\n            my_vegetables = [\"corn\",\"carrots\",\"cauliflower\",\"beats\",\"peppers\"]\n    \n        with allure.step(\"Execute\"):\n            my_vegetable = random.choice(my_vegetables)\n            my_vegetable_char = my_vegetable[0]\n            test_vegetables_char = vegetable[0]\n        with allure.step(\"Assert\"):\n>           assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: peppers vs. Test Fruit corn\nE           assert 'p' == 'c'\nE             \nE             - c\nE             + p\n\ntests/test_sample.py:35: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test will validate that the first charater of the test vegtable matches a random vegtable","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: peppers vs. Test Fruit corn\nassert 'p' == 'c'\n  \n  - c\n  + p","statusTrace":"self = <tests.test_sample.TestVegetables object at 0x7f8288de5490>\nvegetable = 'corn'\n\n    @allure.description(\"This test will validate that the first charater of the test vegtable matches a random vegtable\")\n    @pytest.mark.parametrize(\"vegetable\",[\"beans\",\"corn\",\"peas\",\"cauliflower\",\"carrots\"])\n    def test_veggies(self,vegetable)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {vegetable}\")\n            my_vegetables = [\"corn\",\"carrots\",\"cauliflower\",\"beats\",\"peppers\"]\n    \n        with allure.step(\"Execute\"):\n            my_vegetable = random.choice(my_vegetables)\n            my_vegetable_char = my_vegetable[0]\n            test_vegetables_char = vegetable[0]\n        with allure.step(\"Assert\"):\n>           assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: peppers vs. Test Fruit corn\nE           assert 'p' == 'c'\nE             \nE             - c\nE             + p\n\ntests/test_sample.py:35: AssertionError","steps":[{"name":"Arrange","time":{"start":1719350400496,"stop":1719350400496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Execute","time":{"start":1719350400496,"stop":1719350400496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Assert","time":{"start":1719350400496,"stop":1719350400496,"duration":0},"status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: peppers vs. Test Fruit corn\nassert 'p' == 'c'\n  \n  - c\n  + p\n","statusTrace":"  File \"/home/runner/work/allure_reports/allure_reports/tests/test_sample.py\", line 35, in test_veggies\n    assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":3},"afterStages":[],"labels":[{"name":"feature","value":"Vegetables"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sample"},{"name":"subSuite","value":"TestVegetables"},{"name":"host","value":"fv-az891-246"},{"name":"thread","value":"2148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"vegetable","value":"'corn'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"74be2b28c0e76327","reportUrl":"https://chris-fetters.github.io/allure_reports/8//#testresult/74be2b28c0e76327","status":"passed","time":{"start":1719349883526,"stop":1719349883526,"duration":0}}]},"tags":[]},"source":"c0ddffcf475c9d5a.json","parameterValues":["'corn'"]}