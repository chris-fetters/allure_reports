{"uid":"a4aa88aca8856645","name":"Feature 1 Test 1 for fruit pear","fullName":"tests.test_sample.TestFruit#test_fruit","historyId":"e960305bc63f0763c16753be44a0ba3a","time":{"start":1719349883516,"stop":1719349883516,"duration":0},"description":"This test will validate that the first charater of the test fruit matches a random fruit","descriptionHtml":"<p>This test will validate that the first charater of the test fruit matches a random fruit</p>\n","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: apple vs. Test Fruit pear\nassert 'a' == 'p'\n  \n  - p\n  + a","statusTrace":"self = <tests.test_sample.TestFruit object at 0x7f4d353c14f0>, fruit = 'pear'\n\n    @allure.description(\"This test will validate that the first charater of the test fruit matches a random fruit\")\n    @pytest.mark.parametrize(\"fruit\",[\"apple\",\"orange\",\"pear\",\"peach\"])\n    def test_fruit(self,fruit)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {fruit}\")\n            my_fruits = [\"apple\",\"pear\",\"peach\",\"kiwi\"]\n    \n        with allure.step(\"Execute\"):\n            my_fruit = random.choice(my_fruits)\n            my_fruit_char = my_fruit[0]\n            test_fruit_char = fruit[0]\n        with allure.step(\"Assert\"):\n>           assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: apple vs. Test Fruit pear\nE           assert 'a' == 'p'\nE             \nE             - p\nE             + a\n\ntests/test_sample.py:19: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test will validate that the first charater of the test fruit matches a random fruit","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: apple vs. Test Fruit pear\nassert 'a' == 'p'\n  \n  - p\n  + a","statusTrace":"self = <tests.test_sample.TestFruit object at 0x7f4d353c14f0>, fruit = 'pear'\n\n    @allure.description(\"This test will validate that the first charater of the test fruit matches a random fruit\")\n    @pytest.mark.parametrize(\"fruit\",[\"apple\",\"orange\",\"pear\",\"peach\"])\n    def test_fruit(self,fruit)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {fruit}\")\n            my_fruits = [\"apple\",\"pear\",\"peach\",\"kiwi\"]\n    \n        with allure.step(\"Execute\"):\n            my_fruit = random.choice(my_fruits)\n            my_fruit_char = my_fruit[0]\n            test_fruit_char = fruit[0]\n        with allure.step(\"Assert\"):\n>           assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: apple vs. Test Fruit pear\nE           assert 'a' == 'p'\nE             \nE             - p\nE             + a\n\ntests/test_sample.py:19: AssertionError","steps":[{"name":"Arrange","time":{"start":1719349883516,"stop":1719349883516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Execute","time":{"start":1719349883516,"stop":1719349883516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Assert","time":{"start":1719349883516,"stop":1719349883516,"duration":0},"status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: apple vs. Test Fruit pear\nassert 'a' == 'p'\n  \n  - p\n  + a\n","statusTrace":"  File \"/home/runner/work/allure_reports/allure_reports/tests/test_sample.py\", line 19, in test_fruit\n    assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Fruits"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sample"},{"name":"subSuite","value":"TestFruit"},{"name":"host","value":"fv-az1345-721"},{"name":"thread","value":"2141-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fruit","value":"'pear'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a4aa88aca8856645.json","parameterValues":["'pear'"]}