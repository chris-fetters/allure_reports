{"uid":"3c4fac7ac0a7cf19","name":"Feature 1 Test 1 for fruit orange","fullName":"tests.test_sample.TestFruit#test_fruit","historyId":"d657a710d1256caf2885221fe8fac1f1","time":{"start":1719350400482,"stop":1719350400482,"duration":0},"description":"This test will validate that the first charater of the test fruit matches a random fruit","descriptionHtml":"<p>This test will validate that the first charater of the test fruit matches a random fruit</p>\n","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: pear vs. Test Fruit orange\nassert 'p' == 'o'\n  \n  - o\n  + p","statusTrace":"self = <tests.test_sample.TestFruit object at 0x7f8288f42480>, fruit = 'orange'\n\n    @allure.description(\"This test will validate that the first charater of the test fruit matches a random fruit\")\n    @pytest.mark.parametrize(\"fruit\",[\"apple\",\"orange\",\"pear\",\"peach\"])\n    def test_fruit(self,fruit)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {fruit}\")\n            my_fruits = [\"apple\",\"pear\",\"peach\",\"kiwi\"]\n    \n        with allure.step(\"Execute\"):\n            my_fruit = random.choice(my_fruits)\n            my_fruit_char = my_fruit[0]\n            test_fruit_char = fruit[0]\n        with allure.step(\"Assert\"):\n>           assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: pear vs. Test Fruit orange\nE           assert 'p' == 'o'\nE             \nE             - o\nE             + p\n\ntests/test_sample.py:19: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test will validate that the first charater of the test fruit matches a random fruit","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: pear vs. Test Fruit orange\nassert 'p' == 'o'\n  \n  - o\n  + p","statusTrace":"self = <tests.test_sample.TestFruit object at 0x7f8288f42480>, fruit = 'orange'\n\n    @allure.description(\"This test will validate that the first charater of the test fruit matches a random fruit\")\n    @pytest.mark.parametrize(\"fruit\",[\"apple\",\"orange\",\"pear\",\"peach\"])\n    def test_fruit(self,fruit)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {fruit}\")\n            my_fruits = [\"apple\",\"pear\",\"peach\",\"kiwi\"]\n    \n        with allure.step(\"Execute\"):\n            my_fruit = random.choice(my_fruits)\n            my_fruit_char = my_fruit[0]\n            test_fruit_char = fruit[0]\n        with allure.step(\"Assert\"):\n>           assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: pear vs. Test Fruit orange\nE           assert 'p' == 'o'\nE             \nE             - o\nE             + p\n\ntests/test_sample.py:19: AssertionError","steps":[{"name":"Arrange","time":{"start":1719350400482,"stop":1719350400482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Execute","time":{"start":1719350400482,"stop":1719350400482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Assert","time":{"start":1719350400482,"stop":1719350400482,"duration":0},"status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: pear vs. Test Fruit orange\nassert 'p' == 'o'\n  \n  - o\n  + p\n","statusTrace":"  File \"/home/runner/work/allure_reports/allure_reports/tests/test_sample.py\", line 19, in test_fruit\n    assert my_fruit_char == test_fruit_char, f\"First characters of the fruits do not match: Random Fruit: {my_fruit} vs. Test Fruit {fruit}\"\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":3},"afterStages":[],"labels":[{"name":"feature","value":"Fruits"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sample"},{"name":"subSuite","value":"TestFruit"},{"name":"host","value":"fv-az891-246"},{"name":"thread","value":"2148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fruit","value":"'orange'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"f0b59afd8b196ba6","reportUrl":"https://chris-fetters.github.io/allure_reports/8//#testresult/f0b59afd8b196ba6","status":"failed","statusDetails":"AssertionError: First characters of the fruits do not match: Random Fruit: peach vs. Test Fruit orange\nassert 'p' == 'o'\n  \n  - o\n  + p","time":{"start":1719349883511,"stop":1719349883512,"duration":1}}]},"tags":[]},"source":"3c4fac7ac0a7cf19.json","parameterValues":["'orange'"]}