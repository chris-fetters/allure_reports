{"uid":"df1e851994b21acc","name":"Feature 1 Test 1 for fruit carrots","fullName":"test_set_one.test_sample.TestVegetables#test_veggies","historyId":"bff81d98e70101e90de9ecf5299c7f53","time":{"start":1727902303952,"stop":1727902303953,"duration":1},"description":"This test will validate that the first charater of the test vegtable matches a random vegtable","descriptionHtml":"<p>This test will validate that the first charater of the test vegtable matches a random vegtable</p>\n","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: beats vs. Test Fruit carrots\nassert 'b' == 'c'\n  \n  - c\n  + b","statusTrace":"self = <test_set_one.test_sample.TestVegetables object at 0x7f39d60a4770>\nvegetable = 'carrots'\n\n    @allure.description(\"This test will validate that the first charater of the test vegtable matches a random vegtable\")\n    @pytest.mark.parametrize(\"vegetable\",[\"beans\",\"corn\",\"peas\",\"cauliflower\",\"carrots\"])\n    def test_veggies(self,vegetable)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {vegetable}\")\n            my_vegetables = [\"corn\",\"carrots\",\"cauliflower\",\"beats\",\"peppers\"]\n    \n        with allure.step(\"Execute\"):\n            my_vegetable = random.choice(my_vegetables)\n            my_vegetable_char = my_vegetable[0]\n            test_vegetables_char = vegetable[0]\n        with allure.step(\"Assert\"):\n>           assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: beats vs. Test Fruit carrots\nE           assert 'b' == 'c'\nE             \nE             - c\nE             + b\n\ntest_set_one/test_sample.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test will validate that the first charater of the test vegtable matches a random vegtable","status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: beats vs. Test Fruit carrots\nassert 'b' == 'c'\n  \n  - c\n  + b","statusTrace":"self = <test_set_one.test_sample.TestVegetables object at 0x7f39d60a4770>\nvegetable = 'carrots'\n\n    @allure.description(\"This test will validate that the first charater of the test vegtable matches a random vegtable\")\n    @pytest.mark.parametrize(\"vegetable\",[\"beans\",\"corn\",\"peas\",\"cauliflower\",\"carrots\"])\n    def test_veggies(self,vegetable)->None:\n        with allure.step(\"Arrange\"):\n            allure.dynamic.title(f\"Feature 1 Test 1 for fruit {vegetable}\")\n            my_vegetables = [\"corn\",\"carrots\",\"cauliflower\",\"beats\",\"peppers\"]\n    \n        with allure.step(\"Execute\"):\n            my_vegetable = random.choice(my_vegetables)\n            my_vegetable_char = my_vegetable[0]\n            test_vegetables_char = vegetable[0]\n        with allure.step(\"Assert\"):\n>           assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\nE           AssertionError: First characters of the fruits do not match: Random Fruit: beats vs. Test Fruit carrots\nE           assert 'b' == 'c'\nE             \nE             - c\nE             + b\n\ntest_set_one/test_sample.py:36: AssertionError","steps":[{"name":"Arrange","time":{"start":1727902303952,"stop":1727902303953,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Execute","time":{"start":1727902303953,"stop":1727902303953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Assert","time":{"start":1727902303953,"stop":1727902303953,"duration":0},"status":"failed","statusMessage":"AssertionError: First characters of the fruits do not match: Random Fruit: beats vs. Test Fruit carrots\nassert 'b' == 'c'\n  \n  - c\n  + b\n","statusTrace":"  File \"/home/runner/work/allure_reports/allure_reports/test_set_one/test_sample.py\", line 36, in test_veggies\n    assert my_vegetable_char == test_vegetables_char, f\"First characters of the fruits do not match: Random Fruit: {my_vegetable} vs. Test Fruit {vegetable}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Vegetables"},{"name":"parentSuite","value":"test_set_one"},{"name":"suite","value":"test_sample"},{"name":"subSuite","value":"TestVegetables"},{"name":"host","value":"fv-az1272-736"},{"name":"thread","value":"2163-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_set_one.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"vegetable","value":"'carrots'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"df1e851994b21acc.json","parameterValues":["'carrots'"]}